0	0	KEYWORD	       int	
0	4	IDENTIFIER	         a	
0	5	PUNCTUATION	         ,	
0	7	IDENTIFIER	         b	
0	8	PUNCTUATION	         ,	
0	10	IDENTIFIER	         c	
0	11	PUNCTUATION	         ;	
1	0	KEYWORD	        if	
1	3	PARETHESES	         (	
1	4	PARETHESES	         (	
1	5	IDENTIFIER	         a	
1	7	COMPARISING_OPERATOR	        ==	
1	10	INT	        10	
1	14	LOGIC_OPERATOR	        &&	
1	17	PARETHESES	         (	
1	18	IDENTIFIER	         b	
1	20	COMPARISING_OPERATOR	         >	
1	22	INT	        10	
1	25	PARETHESES	         )	
1	27	IDENTIFIER	         c	
1	29	ARITHMETIC_OPERATOR	         =	
1	31	IDENTIFIER	         a	
1	33	ARITHMETIC_OPERATOR	         %	
1	35	IDENTIFIER	         b	
1	36	PUNCTUATION	         ;	
2	0	KEYWORD	      else	
2	5	KEYWORD	        if	
2	8	PARETHESES	         (	
2	9	PARETHESES	         (	
2	10	IDENTIFIER	         a	
2	12	COMPARISING_OPERATOR	        <=	
2	15	INT	         5	
2	18	LOGIC_OPERATOR	        ||	
2	21	PARETHESES	         (	
2	22	IDENTIFIER	         b	
2	23	COMPARISING_OPERATOR	        !=	
2	25	INT	         5	
2	27	PARETHESES	         )	
2	29	IDENTIFIER	         c	
2	31	ARITHMETIC_OPERATOR	         =	
2	33	IDENTIFIER	         a	
2	35	ARITHMETIC_OPERATOR	         -	
2	37	IDENTIFIER	         b	
2	38	PUNCTUATION	         ;	
3	0	KEYWORD	      else	
4	0	PARETHESES	         {	
5	1	IDENTIFIER	         a	
5	2	ASSIGNMENT_OPERATOR	        --	
5	4	PUNCTUATION	         ;	
6	1	IDENTIFIER	         b	
6	2	ASSIGNMENT_OPERATOR	        ++	
6	4	PUNCTUATION	         ;	
7	1	IDENTIFIER	         c	
7	3	ARITHMETIC_OPERATOR	         =	
7	5	PARETHESES	         (	
7	6	IDENTIFIER	         a	
7	8	ARITHMETIC_OPERATOR	         *	
7	10	IDENTIFIER	         b	
7	11	PARETHESES	         )	
7	13	ARITHMETIC_OPERATOR	         /	
7	15	INT	        10	
7	18	ARITHMETIC_OPERATOR	         +	
7	20	FLOAT	   75.585f	
7	27	INT	         8	
8	0	PARETHESES	         }	
9	0	IDENTIFIER	     print	
9	5	PARETHESES	         (	
9	6	IDENTIFIER	         c	
9	7	PARETHESES	         )	
9	8	PUNCTUATION	         ;	
